---
nameOverride: ""
fullnameOverride: ""
revisionHistoryLimit: 2
replicas: 1
strategyType: RollingUpdate
imagePullSecrets: []
podAnnotations: {}
podLabels: {}
serviceAccount:
  create: true
  annotations: {}
  labels: {}
  automountServiceAccountToken: false

service:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: 9100
  labels: {}
  type: LoadBalancer
  externalIPs: []
  loadBalancerIP: "192.168.40.189"
  externalTrafficPolicy: {}
  loadBalancerSourceRanges: []
  publishNotReadyAddresses: false
  mqttPort: 1883
  mqttsPort: 8883
  metricsPort: 9100

monitoring:
  enabled: false
  serviceMonitor:
    enabled: true
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: 9100
    labels: {}
    honorLabels: true
    interval: 60s
    selector: {}
    scrapeTimeout: 10s
    scheme: http
    tlsConfig: {}
    relabelings:
    - action: replace
      regex: ^(.*)$
      replacement: $1
      separator: ;
      sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: nodename
    metricRelabelings:
    - action: keep
      regex: kube_(daemonset|deployment|pod|namespace|node|statefulset).+
      sourceLabels:
      - __name__
    bearerTokenFile: {}
    # (use long lived access tokens)
    bearerTokenSecret: {}
      # name:
      # key:
      # optional:

resources:
  requests:
    cpu: 150m
    memory: 0.25Gi
  limits:
    cpu: 1000m
    memory: 0.5Gi

nodeSelector: {}
  # kubernetes.io/hostname: prod-k3s-node-0

persistence:
  metadata:
    name: mosquitto-data
  enabled: true
  annotations: {}
  existingClaim: mosquitto-data
  # volumeName: mosquitto-data
livenessProbe:
  enabled: false
  # scheme: HTTP
  periodSeconds: 60
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 6
  initialDelaySeconds: 30
readinessProbe:
  enabled: false
  # scheme: HTTP
  periodSeconds: 60
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 6
  initialDelaySeconds: 30
