nameOverride: ""
fullnameOverride: ""
revisionHistoryLimit: 2
replicas: 1
strategyType: RollingUpdate

imagePullSecrets: []

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsUser: 1883
  runAsGroup: 1883
  runAsNonRoot: true
  readOnlyRootFilesystem: false
  capabilities:
    drop:
    - ALL

securityContext:
  runAsUser: 999
  runAsGroup: 999
  fsGroup: 999

serviceAccount:
  create: true
  annotations: {}
  labels: {}
  automountServiceAccountToken: false

service:
  annotations:
    prometheus.io/scrape: "false"
    prometheus.io/port: 9100
  labels: {}
  type: LoadBalancer
  externalIPs: []
  loadBalancerIP: "192.168.40.189"
  externalTrafficPolicy: {}
  loadBalancerSourceRanges: []
  publishNotReadyAddresses: false
  mqttPort: 1883
  mqttsPort: 8883
  metricsPort: 9100
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: 9100
    labels: {}
    honorLabels: true
    interval: 60s
    selector: {}
    scrapeTimeout: 10s
    scheme: http
    tlsConfig: {}
    relabelings:
    - action: replace
      regex: ^(.*)$
      replacement: $1
      separator: ;
      sourceLabels:
        - __meta_kubernetes_pod_node_name
      targetLabel: nodename
    metricRelabelings:
    - action: keep
      regex: kube_(daemonset|deployment|pod|namespace|node|statefulset).+
      sourceLabels:
        - __name__
    bearerTokenFile: {}
    # (use long lived access tokens)
    bearerTokenSecret: {}
      # name:
      # key:
      # optional:


resources: {}
#   requests:
#     cpu: "1"
#     memory: "256Mi"
#   limits:
#     cpu: "1"
#     memory: "512Mi"
nodeSelector:
  kubernetes.io/hostname: prod-k3s-node-0
persistence:
  enabled: true
  storageClass: longhorn-retain-data
  accessMode: ReadWriteOnce
  size: 1Gi
  annotations: {}