replicas: 1
updateStrategy:
  type: RollingUpdate

initContainers:
- name: velero-plugin-for-aws
  image: velero/velero-plugin-for-aws:v1.10.0
  imagePullPolicy: IfNotPresent
  volumeMounts:
  - mountPath: /target
    name: plugins
# - name: velero-plugin-for-csi
#   image: velero/velero-plugin-for-csi:v0.7.1
#   imagePullPolicy: IfNotPresent
#   volumeMounts:
#   - mountPath: /target
#     name: plugins

configuration:
  features: EnableCSI

  backupStorageLocation:
  - name: minio
    provider: aws
    bucket: k3s-velero
    validationFrequency: 10m0s
    accessMode: ReadWrite
    credential:
      name: velero-secret
      key: AWS_ACCESS_KEY_ID
    config:
      region: us-east-1
      s3ForcePathStyle: true
      s3Url: http://minio.minio.svc:9000
      publicUrl: http://localhost:9000

  volumeSnapshotLocation:
  - name: default
    provider: aws
    credential:
      name: velero-secret
      key: AWS_ACCESS_KEY_ID
    config:
      region: us-east-1

    features: EnableCSI



credentials:
  existingSecret: velero-secret

# Disable VolumeSnapshotLocation CRD. It is not needed for CSI integration
snapshotsEnabled: true
backupsEnabled: true

deployNodeAgent: true

upgradeCRDs: true

metrics:
  enabled: true
  scrapeInterval: 30s
  scrapeTimeout: 10s

  service:
    annotations: {}
    labels: {}

  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8085"
    prometheus.io/path: "/metrics"

  serviceMonitor:
    autodetect: true
    enabled: false
    annotations: {}
    additionalLabels: {}

  nodeAgentPodMonitor:
    autodetect: true
    enabled: false
    annotations: {}
    additionalLabels: {}

  prometheusRule:
    autodetect: true
    enabled: false
