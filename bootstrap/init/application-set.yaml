---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: bootstrap
  namespace: argocd
  labels:
    dev-k3s: bootstrap

spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  - git:
      repoURL: https://github.com/JacekZubielik/dev-k3s-lab-autopilot.git
      requeueAfterSeconds: 10
      revision: ""
      files:
      - path: bootstrap/init/config-dir.yaml # apps/*/config-dir.yaml
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: argocd-autopilot
        spec:
          destination: {}
          project: ""
          source:
            repoURL: ""

  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: '{{ .syncWave }}'
      labels:
        app.kubernetes.io/managed-by: argocd-autopilot
        app.kubernetes.io/name: '{{ .appName }}'
        application-role: '{{ .appRole }}'
        syncPriority: '{{ .syncPriority }}'
      name: bootstrap-{{ .userGivenName }}
      namespace: argocd

    spec:
      project: bootstrap
      source:
        path: '{{ .srcPath }}'
        repoURL: '{{ .srcRepoURL }}'
        targetRevision: '{{ .srcTargetRevision }}'
      destination:
        namespace: '{{ .destNamespace }}'
        server: '{{ .destServer }}'

      # ignoreDifferences:
      # - group: argoproj.io
      #   kind: Application
      #   jsonPointers:
      #   - /status
      # - group: argoproj.io
      #   kind: Application
      #   jsonPointers:
      #   - /operation
      # - group: "apps"
      #   kind: "Deployment"
      #   jsonPointers:
      #   - /spec/template/metadata/annotations
      #   - /spec/template/metadata/labels
      # - group: "apps"
      #   kind: "StatefulSet"
      #   jsonPointers:
      #   - /spec/template/metadata/annotations
      #   - /spec/template/metadata/labels

      # syncPolicy:
      #   automated:
      #     selfHeal: true
      #     prune: true
      #   syncOptions:
      #   - CreateNamespace=true
      #   - PrunePropagationPolicy=foreground
      #   - ServerSideApply=true
      #   - SkipDryRunOnMissingResource=true

  strategy:
    type: RollingSync
    rollingSync:
      steps:
      - matchExpressions:
        - key: syncPriority
          operator: In
          values:
          - stage1 #
        maxUpdate: 100%
      - matchExpressions:
        - key: syncPriority
          operator: In
          values:
          - stage2 #
        maxUpdate: 100%
      - matchExpressions:
        - key: syncPriority
          operator: In
          values:
          - stage3 #
        maxUpdate: 100%
      - matchExpressions:
        - key: syncPriority
          operator: In
          values:
          - stage4 #
        maxUpdate: 100%
